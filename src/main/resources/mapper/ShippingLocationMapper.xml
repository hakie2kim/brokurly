<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.brokurly.repository.mypage.ShippingLocationDao">
    <!-- CREATE -->
    <insert id="insert">
        INSERT INTO shipping_location (ship_loca_id, addr, spec_addr, def_addr_fl, ship_loca_reg_dt, tel_no, rec_addr, rec_name, del_fl)
        VALUES (#{shipLocaId}, #{addr}, #{specAddr}, #{defAddrFl}, #{shipLocaRegDt}, #{telNo}, #{recAddr}, #{recName}, #{delFl})
    </insert>

    <!-- READ -->
    <sql id="select">
        SELECT ship_loca_id, addr, spec_addr, def_addr_fl, ship_loca_reg_dt, tel_no, rec_addr, rec_name, del_fl
        FROM shipping_location
    </sql>

    <select id="selectAll" resultType="ShippingLocation">
        <include refid="select"/>
    </select>

    <select id="selectByCustomer" resultType="ShippingLocationAndShoppingLocationChangeLog">
        SELECT sl.ship_loca_id, sl.addr, sl.spec_addr, sl.def_addr_fl, ship_loca_reg_dt, sl.tel_no, rec_addr, rec_name, sl.del_fl,
            ship_chg_no, name, chg_status, chg_dt, cust_id
        FROM shipping_location sl
        INNER JOIN shipping_location_change_log slcl
        ON sl.ship_loca_id = slcl.ship_loca_id
        WHERE cust_id = #{custId}
    </select>

    <select id="selectUsageByCustomerAndPeriod" resultType="PointLog">
        <include refid="select"/>
        WHERE cust_id = #{custId}
          AND point_stat = '사용'
          AND proc_dt BETWEEN date_sub(now(), interval #{period} month) AND now()
    </select>

    <select id="countUsageByCustomerAndPeriod" resultType="int">
        SELECT count(*)
        FROM point_log
        WHERE cust_id = #{custId}
          AND point_stat = '사용'
          AND proc_dt BETWEEN date_sub(now(), interval #{period} month) AND now()
    </select>

    <select id="selectExpByCustomerAndPeriod" resultType="PointLog">
        <include refid="select"/>
        WHERE cust_id = #{custId}
          AND point_stat = '소멸'
          AND proc_dt BETWEEN date_sub(now(), interval #{period} month) AND now()
    </select>

    <select id="countExpByCustomerAndPeriod" resultType="int">
        SELECT count(*)
        FROM point_log
        WHERE cust_id = #{custId}
          AND point_stat = '소멸'
          AND proc_dt BETWEEN date_sub(now(), interval #{period} month) AND now()
    </select>

    <select id="selectEarningByCustomer" resultType="PointLog">
        <include refid="select"/>
        WHERE cust_id = #{custId}
          AND point_stat LIKE '%적립%'
    </select>

    <select id="selectEarningByCustomerAndPeriod" resultType="PointAndPointLog">
        SELECT p.point_no, pl.point_amt, p.expir_dt, order_id, proc_dt, point_spec, point_stat
        FROM point_log pl
        INNER JOIN point p
        ON pl.point_no = p.point_no
        WHERE pl.cust_id = #{custId}
          AND point_stat LIKE '%적립%'
          AND proc_dt BETWEEN date_sub(now(), interval #{period} month) AND now()
    </select>

    <select id="countEarningByCustomerAndPeriod" resultType="int">
        SELECT count(*)
        FROM point_log
        WHERE cust_id = #{custId}
          AND point_stat LIKE '%적립%'
          AND proc_dt BETWEEN date_sub(now(), interval #{period} month) AND now()
    </select>

    <select id="countAll" resultType="int">
        SELECT count(*)
        FROM shipping_location
    </select>

    <!--UPDATE-->
    <update id="updateByShipLocaId">
        UPDATE shipping_location
        SET spec_addr = #{specAddr}, def_addr_fl = #{defAddrFl}, tel_no = #{telNo}, rec_addr = #{recAddr}, rec_name = #{recName}, del_fl = #{delFl}
        WHERE ship_loca_id = #{shipLocaId}
    </update>

    <!--DELETE-->
    <delete id="deleteAll">
        DELETE
        FROM shipping_location
    </delete>

    <delete id="deleteByPointNo">
        DELETE
        FROM point_log
        WHERE point_no = #{pointNo}
    </delete>

<!--    &lt;!&ndash; CREATE &ndash;&gt;-->
<!--    <insert id="insert" useGeneratedKeys="true" keyProperty="bno">-->
<!--        INSERT INTO board-->
<!--            (title, content, writer)-->
<!--        VALUES-->
<!--            (#{title}, #{content}, #{writer})-->
<!--    </insert>-->

<!--    &lt;!&ndash; READ &ndash;&gt;-->
<!--    <sql id="select">-->
<!--        SELECT * FROM board-->
<!--    </sql>-->

<!--    <sql id="count">-->
<!--        SELECT COUNT(*) FROM board-->
<!--    </sql>-->

<!--    <select id="selectAll" resultType="Board">-->
<!--        <include refid="select"/>-->
<!--        ORDERS LIMIT #{limit} OFFSET #{start}-->
<!--    </select>-->

<!--    <select id="selectByNumber" resultType="Board">-->
<!--        <include refid="select"/>-->
<!--        WHERE bno = #{bno}-->
<!--    </select>-->

<!--    <select id="selectByTitle" resultType="Board">-->
<!--        <include refid="select"/>-->
<!--        WHERE title LIKE CONCAT('%', #{title}, '%')-->
<!--    </select>-->

<!--    <select id="selectByWriter" resultType="Board">-->
<!--        <include refid="select"/>-->
<!--        WHERE writer = #{writer}-->
<!--    </select>-->

<!--    <select id="countAll" resultType="int">-->
<!--        <include refid="count"/>-->
<!--    </select>-->

<!--    &lt;!&ndash; UPDATE &ndash;&gt;-->
<!--    <update id="update">-->
<!--        UPDATE board-->
<!--        SET title = #{title}, content=#{content}, writer=#{writer}-->
<!--        WHERE bno = #{bno}-->
<!--    </update>-->

<!--    <update id="resetAutoIncrement">-->
<!--        ALTER TABLE board-->
<!--            AUTO_INCREMENT = 1-->
<!--    </update>-->

<!--    &lt;!&ndash; DELETE &ndash;&gt;-->
<!--    <delete id="deleteAll">-->
<!--        DELETE FROM board-->
<!--    </delete>-->

<!--    <delete id="deleteByNumber" parameterType="int">-->
<!--        DELETE FROM board-->
<!--        WHERE bno = #{bno}-->
<!--    </delete>-->
</mapper>